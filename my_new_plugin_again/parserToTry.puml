@startuml
class cz.osu.kip.ConfigInfoToMainFormWindowItemsConvertor {
+ {static} MainFormWindowItems convert(ConfigInfo,Project,File)
- {static} void convertPackagesToTreeViewWindow(ConfigInfo,MainFormWindowItems,String)
- {static} void convertConfigTargetDestination(ConfigInfo,MainFormWindowItems,File)
- {static} void convertUMLTargetDestination(ConfigInfo,MainFormWindowItems,File)
}
class cz.osu.kip.umlGeneration.ClassX {
- String name
- String type
- boolean isPublic
- boolean extendStatus
- String extendedClass
- boolean implementStatus
- List<String> implementedInterface
- List<AttributeX> attributeXES
- List<MethodX> methodXES
- List<ClassX> innerClassesX
+ void addInnerClassesX(List<ClassX>)
+ List<ClassX> getInnerClassesX()
+ boolean isPublic()
+ String getName()
+ String getType()
+ boolean isExtendStatus()
+ String getExtendedClass()
+ boolean isImplementStatus()
+ List<String> getImplementedInterface()
+ List<AttributeX> getAttributes()
+ List<MethodX> getMethods()
+ String convertToUmlFormatAssociations()
+ String convertToUmlFormatNestedClassesXAssociations()
}
class cz.osu.kip.NewFileClass {
+ {static} void makeNewFile(String)
- {static} void controlePath(File)
- {static} void createFile(File)
}
enum cz.osu.kip.configForm.SubmitStateForConfigFormWindow {
+  CANCEL
+  GENERATE_UML_DIAGRAM
+  DELETE
}
class cz.osu.kip.FileExplorer {
+ {static} List<File> getJavaFiles(List<File>)
+ {static} List<File> getConfigFiles(List<File>)
}
enum cz.osu.kip.mainForm.SubmitStateForFormWindow {
+  ALL
+  ONLY_UML
+  ONLY_CONFIG
+  CANCEL
}
class cz.osu.kip.umlGeneration.MethodX {
- String status
- String returningType
- String name
- List<InputParameterX> inputParameterXES
- boolean staticStatus
+ String getStatus()
+ String getReturningType()
+ String getName()
+ List<InputParameterX> getInputParameters()
+ boolean isStaticStatus()
}
class cz.osu.kip.mainForm.FolderLevel {
- String name
- File url
- int level
- JBCheckBox jCheckBox
+ JBCheckBox getjCheckBox()
+ void setjCheckBox(JBCheckBox)
+ String getName()
+ void setName(String)
+ File getUrl()
+ void setUrl(File)
+ int getLevel()
+ void setLevel(int)
+ String toString()
}
class cz.osu.kip.mainForm.FolderLevelComparator {
+ int compare(FolderLevel,FolderLevel)
}
class cz.osu.kip.umlGeneration.UmlFilter {
- {static} ConfigInfo configInfo
+ {static} ConfigInfo getConfigInfo()
+ {static} String getTextByConfigInfo(ConfigInfo,PackageX)
- {static} String convertClassToUml(ClassX)
- {static} void convertAttributesForClassX(ClassX,StringBuilder)
- {static} void convertMethodsForClassX(ClassX,StringBuilder)
- {static} void printMethodInfoToUml(StringBuilder,MethodX)
}
class cz.osu.kip.mainForm.PackagesTreeViewWindow {
- java.util.List<FolderLevel> folders
- boolean wasCanceled
- String initialUrl
+ List<FolderLevel> getFolders()
- void makeFrame()
- JPanel makeContentPanel(JFrame)
- ActionListener makeListenerForCheckBox(FolderLevel,JPanel,JFrame,JPanel)
- void addToPanel(FolderLevel,JPanel,JPanel,JFrame)
- List<FolderLevel> makeLevels(File,File[])
+ File getDirectoryPathWithoutFile(File)
- File[] getDirectories(File)
+ boolean isWasCanceled()
- JPanel createButtonPanel()
}
class cz.osu.kip.umlGeneration.AttributeX {
- String status
- String type
- String name
- boolean staticStatus
+ String getStatus()
+ String getType()
+ String getName()
+ boolean isStatic()
}
class cz.osu.kip.mainForm.FormWindow {
- {static} Project currentProject
- {static} File filePath
- MainFormWindowItems mainFormWindowItems
- MainFormWindowPanels mainFormWindowPanels
- SubmitStateForFormWindow submitState
+ {static} File getFilePath()
+ MainFormWindowItems getMainFormWindowItems()
+ SubmitStateForFormWindow getSubmitState()
+ void showFormWindow()
- JPanel createButtonPanel()
+ void refresh()
}
class cz.osu.kip.TopMenuAction {
+ void actionPerformed(AnActionEvent)
- {static} void optionDialog(String)
- List<File> getSubdirs(File)
}
class cz.osu.kip.umlGeneration.PackageX {
- String name
- List<ClassX> classXES
+ String getName()
+ List<ClassX> getClassXES()
+ void addClassX(ClassX)
}
class cz.osu.kip.mainForm.MainFormWindowItems {
- FormWindow formWindow
- JRadioButton defaultUMLTargetDestination
- JRadioButton ownUMLTargetDestination
- ButtonGroup buttonGroupUMLTargetDestination
- JLabel defaultUMLTargetDestinationDesc
- JRadioButton defaultConfigTargetDestination
- JRadioButton ownConfigTargetDestination
- ButtonGroup buttonGroupConfigTargetDestination
- JLabel defaultConfigTargetDestinationDesc
- JRadioButton allPackages
- JRadioButton ownPackages
- ButtonGroup buttonGroupPackages
- JFileChooser defaultUMLTargetFile
- JFileChooser defaultConfigTargetFile
- JCheckBox classesCheckBox
- JCheckBox interfacesCheckBox
- JCheckBox publicForClassCheckBox
- JCheckBox defaultForClassCheckBox
- JCheckBox publicForInterfaceCheckBox
- JCheckBox defaultForInterfaceCheckBox
- JCheckBox checkBoxForClassAttributes
- JCheckBox checkBoxForClassMethods
- JCheckBox checkBoxForInnerClasses
- JCheckBox checkBoxForPrivateClassAttributes
- JCheckBox checkBoxForPublicClassAttributes
- JCheckBox checkBoxForProtectedClassAttributes
- JCheckBox checkBoxForInternalClassAttributes
- JCheckBox checkBoxForPrivateClassMethods
- JCheckBox checkBoxForPublicClassMethods
- JCheckBox checkBoxForProtectedClassMethods
- JCheckBox checkBoxForInternalClassMethods
- JCheckBox checkBoxForInterfaceAttributes
- JCheckBox checkBoxForInterfaceMethods
- PackagesTreeViewWindow packagesTreeViewWindow
- String initialUrl
- ActionListener defaultUMLTargetDestinationListener
- ActionListener ownUMLTargetDestinationListener
- ActionListener defaultConfigTargetDestinationListener
- ActionListener ownConfigTargetDestinationListener
- ActionListener ownPackagesListener
- ActionListener classesListener
- ActionListener classesAttributesListener
- ActionListener classesMethodesListener
- ActionListener interfacesListener
- String setDefaultTargetDestinationText(File)
- ButtonGroup setButtonGroup(JRadioButton)
+ JRadioButton getAllPackages()
+ JRadioButton getOwnPackages()
+ JCheckBox getClassesCheckBox()
+ JCheckBox getInterfacesCheckBox()
+ JFileChooser getDefaultUMLTargetFile()
+ JFileChooser getDefaultConfigTargetFile()
+ JRadioButton getDefaultUMLTargetDestination()
+ JRadioButton getOwnUMLTargetDestination()
+ JLabel getDefaultUMLTargetDestinationDesc()
+ JRadioButton getDefaultConfigTargetDestination()
+ JRadioButton getOwnConfigTargetDestination()
+ JLabel getDefaultConfigTargetDestinationDesc()
+ JCheckBox getPublicForClassCheckBox()
+ JCheckBox getDefaultForClassCheckBox()
+ JCheckBox getPublicForInterfaceCheckBox()
+ JCheckBox getDefaultForInterfaceCheckBox()
+ PackagesTreeViewWindow getTreeViewWindow()
+ JCheckBox getCheckBoxForClassAttributes()
+ JCheckBox getCheckBoxForClassMethods()
+ JCheckBox getCheckBoxForInnerClasses()
+ JCheckBox getCheckBoxForPrivateClassAttributes()
+ JCheckBox getCheckBoxForPublicClassAttributes()
+ JCheckBox getCheckBoxForProtectedClassAttributes()
+ JCheckBox getCheckBoxForInternalClassAttributes()
+ JCheckBox getCheckBoxForPrivateClassMethods()
+ JCheckBox getCheckBoxForPublicClassMethods()
+ JCheckBox getCheckBoxForProtectedClassMethods()
+ JCheckBox getCheckBoxForInternalClassMethods()
+ JCheckBox getCheckBoxForInterfaceAttributes()
+ JCheckBox getCheckBoxForInterfaceMethods()
+ void setDefaultUMLTargetDestination()
+ void setOwnUMLTargetDestination(String)
+ void setDefaultConfigTargetDestination()
+ void setOwnConfigTargetDestination(String)
+ void setOwnPackages(PackagesTreeViewWindow,String)
+ void setClassesCheckBox(boolean)
+ void setInterfacesCheckBox(boolean)
+ void setPublicForClassCheckBox(boolean)
+ void setDefaultForClassCheckBox(boolean)
+ void setPublicForInterfaceCheckBox(boolean)
+ void setDefaultForInterfaceCheckBox(boolean)
+ void setCheckBoxForClassAttributes(boolean)
+ void setCheckBoxForClassMethods(boolean)
+ void setCheckBoxForInnerClasses(boolean)
+ void setCheckBoxForPrivateClassAttributes(boolean)
+ void setCheckBoxForPublicClassAttributes(boolean)
+ void setCheckBoxForProtectedClassAttributes(boolean)
+ void setCheckBoxForInternalClassAttributes(boolean)
+ void setCheckBoxForPrivateClassMethods(boolean)
+ void setCheckBoxForPublicClassMethods(boolean)
+ void setCheckBoxForProtectedClassMethods(boolean)
+ void setCheckBoxForInternalClassMethods(boolean)
+ void setCheckBoxForInterfaceAttributes(boolean)
+ void setCheckBoxForInterfaceMethods(boolean)
+ void setDefaultUMLTargetDestinationDesc(JLabel)
+ void setDefaultConfigTargetDestinationDesc(JLabel)
}
class cz.osu.kip.configForm.ConfigFormWindow {
- JPanel contentPanel
~ List<FolderLevel> configFiles
~ File rootProject
- SubmitStateForConfigFormWindow submitState
+ List<FolderLevel> getConfigFiles()
+ SubmitStateForConfigFormWindow getSubmitState()
- List<FolderLevel> convertConfigFilesToFolderLevels(List<File>)
- void makeFrame()
- JPanel makeContentPanel()
- JPanel createButtonPanel()
}
class cz.osu.kip.ProjectMenuAction {
- ConfigInfo configInfo
+ void actionPerformed(AnActionEvent)
- void showNewForm(Project,File,MainFormWindowItems)
}
class cz.osu.kip.umlGeneration.FileController {
+ {static} List<String> loadFileToLines(String)
+ {static} void saveToFile(String,String)
}
class cz.osu.kip.umlGeneration.InputParameterX {
- String type
- String name
+ String getType()
+ String getName()
+ String convertToUmlFormat()
}
class cz.osu.kip.umlGeneration.DividingToClassUtil {
+ {static} PackageX divideFromLines(List<String>)
- {static} ClassX getOneClass(List<String>,int)
- {static} boolean stringIsNotInComment(String,String)
- {static} int getCountOfFoundStringInStringNotInQuotation(String,String)
- {static} ClassX addClassX(List<String>)
- {static} boolean getIfClassIsPublic(String)
- {static} AttributeX getAttributeFromLine(String)
- {static} String getAttributeName(String)
- {static} String getAttributeType(String)
- {static} String getClassType(String)
- {static} List<String> getImplementedInterface(String)
- {static} String getExtendedClass(String)
- {static} String getNameOfClass(String)
- {static} MethodX getMethodsFromList(String)
- {static} List<InputParameterX> getInputParameters(String)
- {static} String getNameOfMethod(String)
- {static} String getReturningType(String)
- {static} String getStatus(String)
}
class cz.osu.kip.ConfigInfo {
- String initialUrl
- String umlTargetDestination
- String configTargetDestination
- List<String> packages
- boolean classes
- boolean publicClasses
- boolean defaultClasses
- boolean attributesForClasses
- boolean methodsForClasses
- boolean innerClasses
- boolean publicAttributesForClasses
- boolean privateAttributesForClasses
- boolean protectedAttributesForClasses
- boolean internalAttributesForClasses
- boolean publicMethodsForClasses
- boolean privateMethodsForClasses
- boolean protectedMethodsForClasses
- boolean internalMethodsForClasses
- boolean interfaces
- boolean publicInterfaces
- boolean defaultInterfaces
- boolean attributesForInterfaces
- boolean methodsForInterfaces
- List<File> getSubdirs(File)
+ String getInitialUrl()
+ String getUmlTargetDestination()
+ String getConfigTargetDestination()
+ List<String> getPackages()
+ boolean isClasses()
+ boolean isPublicClasses()
+ boolean isDefaultClasses()
+ boolean isAttributesForClasses()
+ boolean isMethodsForClasses()
+ boolean isInnerClasses()
+ boolean isPublicAttributesForClasses()
+ boolean isPrivateAttributesForClasses()
+ boolean isProtectedAttributesForClasses()
+ boolean isInternalAttributesForClasses()
+ boolean isPublicMethodsForClasses()
+ boolean isPrivateMethodsForClasses()
+ boolean isProtectedMethodsForClasses()
+ boolean isInternalMethodsForClasses()
+ boolean isInterfaces()
+ boolean isPublicInterfaces()
+ boolean isDefaultInterfaces()
+ boolean isAttributesForInterfaces()
+ boolean isMethodsForInterfaces()
+ String toString()
}
class cz.osu.kip.mainForm.MainFormWindowPanels {
- Project currentProject
- File filePath
- MainFormWindowItems mainFormWindowItems
- JPanel scrollablePanel
- JPanel contentPanel
- JPanel targetUMLDestinationPanel
- JPanel targetConfigDestinationPanel
- JPanel packagesPanel
- JPanel classesInterfacesPlusModifiersPanel
- JPanel attributesMethodsInnerClassesPanel
+ JPanel getContentPanel()
+ JPanel getScrollablePanel()
- JPanel makeScrollablePanel()
- JPanel makeContentPanel()
- void setMainContextPanelLayout(GroupLayout)
+ void setUMLTargetDestinationPanel()
+ void setConfigTargetDestinationPanel()
+ void setPackagesPanel()
+ void setClassesInterfacesPlusModifiersPanel()
- GroupLayout setSubpanelsLayout(JPanel)
}
class cz.osu.kip.Generator {
+ {static} void createUmlFile(MainFormWindowItems,ConfigInfo)
+ {static} void createConfigFile(ConfigInfo)
+ {static} List<PackageX> getPackageXES(List<File>)
+ {static} PackageX getPackageXFromFile(File)
+ {static} MainFormWindowItems getDataFromFile(Project,File)
}


java.util.Comparator <|.. cz.osu.kip.mainForm.FolderLevelComparator
cz.osu.kip.mainForm.JFrame <|-- cz.osu.kip.mainForm.PackagesTreeViewWindow
cz.osu.kip.mainForm.JFrame <|-- cz.osu.kip.mainForm.FormWindow
com.intellij.openapi.project.DumbAwareAction <|-- cz.osu.kip.TopMenuAction
cz.osu.kip.configForm.JFrame <|-- cz.osu.kip.configForm.ConfigFormWindow
com.intellij.openapi.actionSystem.AnAction <|-- cz.osu.kip.ProjectMenuAction
@enduml